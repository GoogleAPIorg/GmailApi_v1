200 OK
 
- Show headers -
  
{
 "id": "1581aa78ab501fdb",
 "threadId": "1581aa78ab501fdb",
 "labelIds": [
  "IMPORTANT",
  "CATEGORY_SOCIAL",
  "INBOX"
 ],
 "snippet": "InterNations - Connecting Global Minds Confirmed contact Dear Vuk, Your international network is growing! 
 Mara Romezi has accepted your contact request. Mara Romezi Mara Romezi Mara Romezi View profile",
 "historyId": "30029319",
 "internalDate": "1477915936000",
 "payload": {
  "partId": "",
  "mimeType": "text/html",
  "filename": "",
  "headers": [
   {
    "name": "Delivered-To",
    "value": "vukdukic@gmail.com"
   },
   {
    "name": "Received",
    "value": "by 10.37.10.4 with SMTP id 4csp60173ybk;        Mon, 31 Oct 2016 05:12:17 -0700 (PDT)"
   },
   {
    "name": "X-Received",
    "value": "by 10.28.156.73 with SMTP id f70mr9655576wme.45.1477915937401;        Mon, 31 Oct 2016 05:12:17 -0700 (PDT)"
   },
   {
    "name": "Return-Path",
    "value": "<mailrobot@internations.org>"
   },
   {
    "name": "Received",
    "value": "from mailout.internations.org (mailout.internations.org. [176.28.27.144])        by mx.google.com with ESMTPS id o83si23944807wmb.123.2016.10.31.05.12.17        for <vukdukic@gmail.com>        (version=TLS1 cipher=AES128-SHA bits=128/128);        Mon, 31 Oct 2016 05:12:17 -0700 (PDT)"
   },
   {
    "name": "Received-SPF",
    "value": "pass (google.com: domain of mailrobot@internations.org designates 176.28.27.144 as permitted sender) client-ip=176.28.27.144;"
   },
   {
    "name": "Authentication-Results",
    "value": "mx.google.com;       dkim=pass header.i=@internations.org;       spf=pass (google.com: domain of mailrobot@internations.org designates 176.28.27.144 as permitted sender) smtp.mailfrom=mailrobot@internations.org"
   },
   {
    "name": "DKIM-Signature",
    "value": "v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed; d=internations.org; s=dkim; h=Content-Transfer-Encoding:Content-Type:MIME-Version:To:From:Subject:Date:Message-ID; bh=ZYbOy5BFIGDuL2o4jXCsNl2V1RZn7/jP5nIVP2DyJUA=; b=qGdVaXmQ+45A6+Nssl9Vs8D540Bn9tsCj3XsV+Zh8jzA/5PkEl5RuWRLhjmbg4KHW5Qf9PIMoqRoznX82/u1KmtZFvNYZ3rX9DdQAr05ar7ciZYb6Zn065+Aqt8tXWgZx/u5kKM8csdw7ZE8SlBLI2dLV9VQhJsyWI2WMjvgrYo=;"
   },
   {
    "name": "Received",
    "value": "from [80.237.131.198] (helo=www.internations.org) by mailout.internations.org with esmtp (Exim 4.72) (envelope-from <mailrobot@internations.org>) id 1c1BRo-0003r4-UO for vukdukic@gmail.com; Mon, 31 Oct 2016 13:12:16 +0100"
   },
   {
    "name": "Message-ID",
    "value": "<c313d1a7a9abee8bd239b8c8a23c89bf@www.internations.org>"
   },
   {
    "name": "Date",
    "value": "Mon, 31 Oct 2016 13:12:16 +0100"
   },
   {
    "name": "Subject",
    "value": "Mara Romezi has accepted your contact request"
   },
   {
    "name": "From",
    "value": "InterNations <mailrobot@internations.org>"
   },
   {
    "name": "To",
    "value": "Vuk Dukic <vukdukic@gmail.com>"
   },
   {
    "name": "MIME-Version",
    "value": "1.0"
   },
   {
    "name": "Content-Type",
    "value": "text/html; charset=utf-8"
   },
   {
    "name": "Content-Transfer-Encoding",
    "value": "quoted-printable"
   }
  ],
  "body": {
   "size": 30291,
   "data": ""
  }
 },
 "sizeEstimate": 34149
}
